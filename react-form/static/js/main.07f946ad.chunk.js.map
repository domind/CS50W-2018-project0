{"version":3,"sources":["MyList.js","utils.js","dateconversion.js","App.js","serviceWorker.js","index.js"],"names":["myList","react_default","a","createElement","Row_default","Col_default","xs","Form_default","Label","column","this","props","person","id","Control","type","required","name","value","onChange","updateList","placeholder","surname","as","rows","remarks","Check","checked","checkbox11","checkbox12","Button_default","variant","onClick","deleteFromList","Component","createEmail","item","personsList","other","listOfPersons","length","map","x","rank","String","replace","RegExp","email","required_field","non_mandatory_field","textarea","date","myDate","console","log","current_myDatetime","Date","getDate","getMonth","parseInt","getFullYear","convertDate","radio","radio2","additional_field","radio3","checkbox2","others","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","emptyItem","checkbox12State","checkbox12Count","reset","setState","downloadFile","state","element","document","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","e","index","target","p","i","objectSpread","splice","validated","message","handleChange","bind","assertThisInitialized","changeMyListAdd","handlePaste","handleChangeOther","event","currentTarget","checkValidity","preventDefault","stopPropagation","alert","text","split","s","push","valuex","_this2","className","Container_default","noValidate","onSubmit","handleSubmit","Group","controlId","label","readOnly","MyList","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07f946ad.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass myList extends Component {\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col xs={1}><Form.Label column >{this.props.person.id + \".\"}</Form.Label></Col>\r\n                <Col xs={2}> <Form.Control type=\"text\" required name=\"name\" value={this.props.person.name || \"\"} onChange={this.props.updateList} placeholder=\"Name\" /></Col>\r\n                <Col xs={3}><Form.Control type=\"text\" required name=\"surname\" value={this.props.person.surname || \"\"} onChange={this.props.updateList} placeholder=\"Surname\" /></Col>\r\n                <Col xs={2}><Form.Control as=\"textarea\" rows=\"1\" name=\"remarks\" value={this.props.person.remarks || \"\"} onChange={this.props.updateList} placeholder=\"Remarks\" /></Col>\r\n                <Col xs={1}> <Form.Check name=\"checkbox11\" checked={this.props.person.checkbox11 || \"\"} onChange={this.props.updateList} /></Col>\r\n                <Col xs={2}>  <Form.Check name=\"checkbox12\" checked={this.props.person.checkbox12 || \"\"} onChange={this.props.updateList} /></Col>\r\n                <Col xs={1} > <Button variant=\"danger\" onClick={this.props.deleteFromList || \"\"}>Delete</Button></Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default myList","import { convertDate } from './dateconversion.js';\r\n\r\nexport function createEmail(item, personsList, other) {\r\n  let listOfPersons = \"\"\r\n  personsList.length > 0 ? listOfPersons = personsList.map(x => \"<tr class=styleList><td class=styleList>\" + x.id + \"</td><td class=styleList>\" +\r\n    x.rank + \"</td><td class=styleList> \" + x.name + \"</td><td class=styleList> \" +\r\n    (x.remarks ? \"Remarks: \" + x.remarks + \" \" : \"\") +\r\n    (x.checkbox11 ? \" Checkbox checkbox11 checked. \" : \"\") +\r\n    (x.checkbox12 ? \" Checkbox checkbox12 checked. \" : \"\") + \"</td></tr>\"\r\n  ) : listOfPersons = \"\"\r\n  listOfPersons = String(listOfPersons).replace(new RegExp(\"</tr>,\", 'g'), \"</tr>\")\r\n\r\n  return \"To:\" + item.email + \"\\r\\nSubject: \" + item.required_field +\r\n    \"\\r\\nX-Unsent: 1\\r\\nContent-Type: text/html\\r\\n\\r\\n<html><body> <style> .personsList, .styleList{border: 1px solid black;} .personsList{border-collapse: collapse;}</style>  <h3>Good day,</h3> <p>Some text</p><p><br/> \" +\r\n    \"<p>Text from non mandatory field: \" + item.non_mandatory_field + \"</p><br/>\" +\r\n    \"<p>Text from textarea: \" + item.textarea + \"</p>\" +\r\n    \"<table><tr><td><b>Date </b></td><td>:</td><td> \" + (item.date ? convertDate(item.date) : \"\") + \"</td></tr>\" +\r\n    \"<tr><td><b>Radio buttons example checked </b></td><td>:</td><td> \" + (item.radio ? \"Yes</td></tr>\" : \"No</td></tr>\") +\r\n    \"<tr><td><b>Additional field on selection checked </b></td><td>:</td><td> \" + (item.radio2 ? \"Yes. Text from additional field: \" + item.additional_field + \"</td></tr>\" : \"No</td></tr>\") +\r\n    \"<tr><td><b>Radio controlling checkbox checked</b> </td><td>:</td><td> \" + (item.radio3 ? \"Yes</td></tr>\" : \"No</td></tr>\") +\r\n    \"<tr><td><b>Regular checkbock checked</b> </td><td>:</td><td> \" + (item.checkbox2 ? \"Yes</td></tr>\" : \"No</td></tr>\") +\r\n    \"</table>\" +\r\n    (personsList.length > 0 ?\r\n      \"<p>List of persons: <table class=personsList>  <tr class=styleList><th>No.</th><th class=styleList>Name</th><th class=styleList>Surname</th><th class=styleList>Remarks</th></tr>\" +\r\n      listOfPersons + \"</table></p>\" : \"\") +\r\n    (item.checkbox12 ? \"Number of checkboxes checked - \" + item.checkbox12 : \"\") +\r\n\r\n    (other ? \"Other \" + item.others + \"; \" : \"\") +\r\n\r\n    \"</p><p>Thank you in advance</p></body></html>\"\r\n}\r\n","export function convertDate(myDate) {\r\n  console.log(myDate)\r\n  const current_myDatetime = new Date(myDate)\r\n  return (current_myDatetime.getDate()<10 ?\"0\" +current_myDatetime.getDate():current_myDatetime.getDate() )+ \"-\" +\r\n    ((current_myDatetime.getMonth() + 1 < 10) ? \"0\" + (parseInt(current_myDatetime.getMonth())+1) : (current_myDatetime.getMonth())+1) + \"-\" +\r\n    current_myDatetime.getFullYear()\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport MyList from './MyList.js';\nimport { createEmail } from './utils.js';\n\nclass App extends Component {\n  emptyItem = {\n    radio: \"\", radio2: false, radio3: true,\n    email: \"\", required_field: \"\", non_mandatory_field: \"\", textarea: \"\", additional_field: \"\", date: \"\", checkbox2: \"\", checkbox12State: false, checkbox12Count: 0, others: \"\"\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      myList: [],\n      item: this.emptyItem,\n      other: false,\n      validated: false,\n      message: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.changeMyListAdd = this.changeMyListAdd.bind(this);\n    this.handlePaste = this.handlePaste.bind(this);\n    this.handleChangeOther = this.handleChangeOther.bind(this);\n  }\n\n  reset = () => {\n    let myList = [];\n    this.setState({ myList })\n  }\n\n  downloadFile = () => {\n    let email = createEmail(this.state.item, this.state.myList, this.state.other)\n    const element = document.createElement(\"a\");\n    const file = new Blob([email], { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = \"created_email.eml\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      alert(\"You did not entered all mandatory fields\")\n    } else {\n      event.preventDefault();\n      event.stopPropagation();\n      this.downloadFile()\n    }\n    this.setState({ validated: true });\n  }\n\n  handleChangeOther(event) {\n    if (event.target.checked) {\n      this.setState({ other: true })\n    }\n    else {\n      this.setState({ other: false })\n    }\n  }\n  handlePaste(event) {\n    const text = event.target.value.split(\"\\n\")\n    for (let i = 0; i < text.length; i++) {\n      let s = text[i].split(/[ ,\\t]+/)\n      this.state.myList.push({ id: this.state.myList.length + 1, surname: s[1], name: s[0] })\n      this.setState({ myList: this.state.myList })\n    }\n  }\n\n  updateList = (e, index) => {\n    const myList = this.state.myList;\n    const name = e.target.name\n    myList[index][name] = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    let x = false;\n    let p = this.state.item.checkbox12Count;\n    if (e.target.name === \"checkbox12\")\n      if (e.target.checked) {\n        x = true; p++; this.setState({ checkbox12Count: this.state.item.checkbox12Count + 1 },\n          //  () =>console.log(this.state.item.checkbox12Count)\n        )\n      }\n      else {\n        for (let i = 0; i < myList.length; i++) {\n          if (myList[i].checkbox12) x = true\n\n        }\n        p--;\n      }\n    this.setState({ myList });\n    let item = { ...this.state.item }\n    if (e.target.name === \"checkbox12\") item.checkbox12State = x;\n    item.checkbox12Count = p;\n    this.setState({ item })\n\n\n  };\n\n  deleteFromList = (e, index) => {\n    const myList = this.state.myList;\n    myList.splice(index, 1);\n    for (let i = 0; i < myList.length; i++) {\n      myList[i].id = i + 1;\n    }\n    this.setState({\n      myList\n    });\n  };\n\n  changeMyListAdd(event) {\n    this.state.myList.push({ id: this.state.myList.length + 1, name: \"\", rank: \"\" })\n    this.setState({ myList: this.state.myList })\n  }\n\n  handleChange(event) {\n    var valuex = 0;\n    const target = event.target;\n    if (target.type === \"radio\") {\n      if (target.id === \"radioYes\") valuex = true\n      else valuex = false\n    }\n    else\n      valuex = target.type === \"checkbox\" ? target.checked : target.value;\n    const value = (typeof valuex === 'string' || valuex instanceof String) ? valuex.replace(/(?:\\r\\n|\\r|\\n)/g, '<br/>') : valuex\n    const name = target.name;\n    let item = { ...this.state.item };\n    item[name] = value;\n    this.setState({ item }\n      // ,()=> {console.log(this.state.item);  }\n    );\n\n  }\n\n  render() {\n    const { validated } = this.state;\n\n    return (\n      <div className=\"App\" >\n        <Container>\n          <Row >\n            <Col className=\"Title\">\n              <h1>PAGE TITLE</h1>\n            </Col>\n          </Row>\n          <Row>\n            <p />\n          </Row>\n          <Form noValidate className=\"mainForm\"\n            validated={validated}\n            onSubmit={e => this.handleSubmit(e)}>\n            <Form.Group controlId=\"Required_field\">\n              <Row>\n\n                <Col xs={2}><Form.Label> Required field (subject):</Form.Label></Col>\n                <Col xs={3}>\n                  <Form.Control\n                    required\n                    type=\"text\"\n                    name=\"required_field\"\n                    placeholder=\"description\"\n                    onChange={this.handleChange}\n                  />\n                </Col>\n                <Col xs={2}><Form.Label> Non mandatory field:</Form.Label></Col>\n                <Col xs={3}><Form.Control type=\"text\" name=\"non_mandatory_field\" placeholder=\"description\" onChange={this.handleChange} /></Col>\n\n\n\n              </Row>\n            </Form.Group>\n            <Form.Group controlId=\"second\">\n              <Row>\n                <Col xs={2}>\n                  <Form.Label>E-mail pick list </Form.Label></Col>\n                <Col xs={3}> <Form.Control required name=\"email\" onChange={this.handleChange} as=\"select\">\n                  <option value=\"\">Choose...</option>\n                  <option value=\"example@example.com\">Example</option>\n                  <option value=\"test@test.com\">Test</option>\n\n\n                </Form.Control></Col>\n                <Col xs={2}><Form.Label>Date example</Form.Label></Col>\n                <Col xs={3}><Form.Control type=\"date\" name=\"date\" onChange={this.handleChange} /></Col>\n\n              </Row>\n            </Form.Group>\n            <hr className=\"line\" />\n            <Form.Group controlId=\"Schedule\">\n\n              <Row>\n\n                <Col xs={2}><Form.Label>Text area example</Form.Label></Col>\n                <Col xs={3}><Form.Control as=\"textarea\" rows=\"5\" name=\"textarea\" onChange={this.handleChange} placeholder=\"Text here\" /></Col>\n                <Col xs={7}>\n                  <Row>\n                    <Col xs={6}>\n                      <Form.Label as=\"legend\" >\n                        Radio buttons example\n      </Form.Label>\n                    </Col>\n                    <Col xs={2}>\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"YES\"\n                        name=\"radio\"\n                        id=\"radioYes\"\n                        checked={this.state.item.radio === true}\n                        onChange={this.handleChange}\n                      />\n                    </Col>\n                    <Col xs={2}>\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"NO\"\n                        checked={this.state.item.radio === false}\n                        name=\"radio\"\n                        id=\"radioNo\"\n                        onChange={this.handleChange}\n                      />\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col xs={6}>\n                      <Form.Label as=\"legend\" >\n                        Additional field on selection\n      </Form.Label>\n                    </Col>\n                    <Col xs={2}>\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"YES\"\n                        name=\"radio2\"\n                        id=\"radioYes\"\n                        checked={this.state.item.radio2 === true}\n                        onChange={this.handleChange}\n                      />\n                    </Col>\n                    <Col xs={2}>\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"NO\"\n                        checked={this.state.item.radio2 === false}\n                        name=\"radio2\"\n                        id=\"radioNo\"\n                        onChange={this.handleChange}\n                      />\n\n                    </Col>\n                  </Row>\n                  <Row>\n                    {this.state.item.radio2 ?\n                      <Col>\n                        <Form.Label>Additional field</Form.Label>\n                      </Col> : \"\"}\n                    {this.state.item.radio2 ?\n                      <Col>\n                        <Form.Control type=\"text\" required placeholder=\"description\" name=\"additional_field\" onChange={this.handleChange} />\n                      </Col>\n                      : \"\"}\n                  </Row>\n                  <Row >\n                    <Col xs={6}>\n                      <Form.Label as=\"legend\" >Radio controlling checkbox</Form.Label>\n                    </Col>\n                    <Col xs={2}>\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"YES\"\n                        name=\"radio3\"\n                        id=\"radioYes\"\n                        checked={this.state.item.radio3 === true}\n                        onChange={this.handleChange}\n                      />\n                    </Col>\n                    <Col xs={2}>\n                      <Form.Check\n                        type=\"radio\"\n                        label=\"NO\"\n                        checked={this.state.item.radio3 === false}\n                        name=\"radio3\"\n                        id=\"radioNo\"\n                        onChange={this.handleChange}\n                      />\n                    </Col>\n                  </Row>\n\n                  <Row className=\"left\"><Col xs={1}></Col><Col>\n                    <Form.Check readOnly label=\"Checkbox controlled by radio\" name=\"checkbox1\" checked={this.state.item.radio3 || \"\"} onChange={this.handleChange} />\n                    <Form.Check label=\"Regular checkbox\" name=\"checkbox2\" onChange={this.handleChange} />\n                    <Form.Check readOnly label={\n                      \"Checkbox based on value from Checkbox2 in list below, count: \" +\n                      this.state.item.checkbox12Count +\n                      \" tick\" +\n                      ((this.state.item.checkbox12Count !== 1) ? \"s\" : \"\") +\n                      \".\"} checked={(this.state.item.checkbox12State > 0) ? true : false || \"\"} name=\"checkbox12State\" />\n                    <Form.Check label=\"Checkbox trigering other field\" name=\"other\" onChange={this.handleChangeOther} /></Col>\n                  </Row>\n                  <Row>\n\n                    {this.state.other ? <Col ><Form.Control type=\"text\" name=\"others\" onChange={this.handleChange} placeholder=\"Other\" /></Col> : \"\"}\n                  </Row>\n                </Col>\n              </Row>\n            </Form.Group>\n            <hr className=\"line\" />\n            <Row>\n              <Col xs={1}> <Form.Label>No.</Form.Label></Col>\n              <Col xs={2}> <Form.Label>Name</Form.Label></Col>\n              <Col xs={3}><Form.Label>Surname </Form.Label></Col>\n              <Col xs={2}><Form.Label>Remarks</Form.Label></Col>\n              <Col xs={1}><Form.Label>Checkbox</Form.Label></Col>\n              <Col xs={2}><Form.Label>Checkbox2</Form.Label></Col>\n            </Row>\n            <div className=\"App\">\n              {this.state.myList.map((person, i) => {\n                return (\n                  <MyList key={person.id}\n                    updateList={e => {\n                      this.updateList(e, i);\n                    }}\n                    deleteFromList={e => {\n                      this.deleteFromList(e, i);\n                    }}\n                    person={this.state.myList[i]}\n                    label={person.id}\n                  />\n                );\n              })}\n            </div>\n            <Row>\n\n              <Col>\n                <br />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Button variant=\"success\" onClick={this.changeMyListAdd}>Add Record</Button>\n              </Col>\n            </Row>\n            <Row>\n              <p><br /></p>\n            </Row>\n            <Row className=\"left\" >\n\n              <Col xs={4}>\n                Import records from text.<br /> Separate name and surname with space, comma or tab.Each record in new line.\n              </Col>\n              <Col xs={6}>\n                <Form.Control as=\"textarea\" placeholder=\"Paste text here\" name=\"mattersToMaster\" onChange={this.handlePaste} rows=\"3\" />\n              </Col>\n            </Row>\n\n            <hr className=\"line\" />\n\n            <Row>\n              <p><br /></p>\n            </Row>\n            <Row>\n              <Col xs={3}>\n              </Col>\n              <Col xs={3}>  <Button type=\"submit\" >Create email file</Button> </Col>\n              <Col xs={3}><Button variant=\"primary\" type=\"reset\" onClick={this.reset}>Reset</Button></Col>\n              <Col xs={3}></Col>\n            </Row>\n            <Row>\n              <Col><br /></Col>\n            </Row>\n            <hr className=\"line\" />\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}